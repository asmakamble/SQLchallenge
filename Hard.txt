#Day3

You’re trying to identify the most calorie-packed candies to avoid during your holiday binge. Write a query to rank candies based on their calorie count within each category. Include the candy_name, candy_category, calories, and rank (rank_in_category) within the category.

Table name: candy_nutrition

candy_id	candy_name		calories	candy_category
1		Candy Cane		200		Sweets
2		Chocolate Bar		250		Chocolate
3		Gingerbread Cookie	150		Baked Goods
4		Lollipop		100		Sweets
5		Dark Chocolate Truffle	180		Chocolate
6		Marshmallow		900		Sweets
7		Sugar Cookie		140		Baked Goods

Question level of difficulty:Hard

Answer: 
select 
        candy_name, 
        candy_category,
        calories,
        rank() over (partition by candy_category order by calories DESC) as rank_in_category
from candy_nutrition
order by 
candy_category,
rank_in_category;

-------------------------------------------------------------------------------------------
#Day 6
Scientists are tracking polar bears across the Arctic to monitor their migration patterns and caloric intake. Write a query to find the top 3 polar bears that have traveled the longest total distance in December 2024. Include their bear_id, bear_name, and total_distance_traveled in the results.

Table name: polar_bears

bear_id	bear_name	age
1	Snowball	10
2	Frosty		7
3	Iceberg		15
4	Chilly		5

Table name: tracking

tracking_id	bear_id		distance	date
1		1		25		2024-12-01
2		2		40		2024-12-02
3		1		30		2024-12-03
4		3		50		2024-12-04
5		2		35		2024-12-05
6		4		20		2024-12-06
7		3		55		2024-12-07
8		1		45		2024-12-08

Question level of difficulty:Hard

Answer: 
select pb.bear_id, 
    pb.bear_name,
    sum(t.distance_km) as total_distance_traveled
from polar_bears pb
left join
tracking t on pb.bear_id = t.bear_id
where 
    strftime('%Y', t.date) = '2024' AND strftime('%m', t.date) = 12
group by 
    pb.bear_id, pb.bear_name
order by total_distance_traveled desc
limit 3;

---------------------------------------------------------------------------------------

# Day 9

A community is hosting a series of festive feasts, and they want to ensure a balanced menu. Write a query to identify the top 3 most calorie-dense dishes (calories per gram) served for each event. Include the dish_name, event_name, and the calculated calorie density in your results.

Table name: events

event_id	event_name
1		Christmas Eve Dinner
2		New Years Feast
3		Winter Solstice Potluck
Table name: menu

dish_id		dish_name		event_id	calories	weight_g
1		Roast Turkey		1		3500		5000
2		Chocolate Yule Log	1		2200		1000
3		Cheese Fondue		2		1500		800
4		Holiday Fruitcake	3		4000		1200
5		Honey Glazed Ham	2		2800		3500

Question level of difficulty:Hard

Answer:  

WITH RankedDishes AS (
    SELECT 
        m.dish_name,
        e.event_name,
        (m.calories * 1.0 / m.weight_g) AS calorie_density,
        ROW_NUMBER() OVER (PARTITION BY e.event_id ORDER BY (m.calories * 1.0 / m.weight_g) DESC) AS rank
    FROM 
        menu m
    JOIN 
        events e
    ON 
        m.event_id = e.event_id
)
SELECT 
    dish_name,
    event_name,
    calorie_density
FROM 
    RankedDishes
WHERE 
    rank <= 3
ORDER BY 
    event_name,
    calorie_density DESC;

---------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

# Day 12

A collector wants to identify the top 3 snow globes with the highest number of figurines. Write a query to rank them and include their globe_name, number of figurines, and material.

Table name: snow_globes

globe_id	globe_name		volume_cm3	material
1		Winter Wonderland	500		Glass
2		Santas Workshop		300		Plastic
3		Frozen Forest		400		Glass
4		Holiday Village		600		Glass

Table name: figurines

figurine_id	globe_id	figurine_type
1		1		Snowman
2		1		Tree
3		2		Santa Claus
4		2		Elf
5		2		Gift Box
6		3		Reindeer
7		3		Tree
8		4		Snowman
9		4		Santa Claus
10		4		Tree
11		4		Elf
12		4		Gift Box

Question level of difficulty: Hard

Answer: 

WITH RankedGlobes AS (
    SELECT 
        snow_globes.globe_name,
        COUNT(figurines.figurine_id) AS number_of_figures,
        snow_globes.material,
        RANK() OVER (ORDER BY COUNT(figurines.figurine_id) DESC) AS rank
    FROM 
        snow_globes
    LEFT JOIN 
        figurines ON snow_globes.globe_id = figurines.globe_id
    GROUP BY 
        snow_globes.globe_name, snow_globes.material
)
SELECT 
    globe_name, 
    number_of_figures, 
    material
FROM 
    RankedGlobes
WHERE 
    rank <= 3
ORDER BY 
    rank;

--------------------------------------------------------------------------------------

# Day 15

A family reunion is being planned, and the organizer wants to identify the three family members with the most children. Write a query to calculate the total number of children for each parent and rank them. Include the parent’s name and their total number of children in the result.

Table name: family_members

member_id	name	age
1		Alice	30
2		Bob	58
3		Charlie	33
4		Diana	55
5		Eve	5
6		Frank	60
7		Grace	32
8		Hannah	8
9		Ian	12
10		Jack	3

Table name: parent_child_relationships

parent_id	child_id
2		1
3		5
4		1
6		7
6		8
7		9
7		10
4		8

Question level of difficulty:Hard

Answer:
WITH ParentChildCount AS (
    SELECT 
        fm.name AS parent_name,
        COUNT(pcr.child_id) AS total_children
    FROM 
        family_members fm
    LEFT JOIN 
        parent_child_relationships pcr ON fm.member_id = pcr.parent_id
    GROUP BY 
        fm.name
)
SELECT 
    parent_name, 
    total_children
FROM 
    ParentChildCount
ORDER BY 
    total_children DESC
LIMIT 3;

-----------------------------------------------------------------------------------------

#Day18

A travel agency is promoting activities for a "Summer Christmas" party. They want to identify the top 2 activities based on the average rating. Write a query to rank the activities by average rating.

Table name: activities

activity_id	activity_name
1		Surfing Lessons
2		Jet Skiing
3		Sunset Yoga

Table name: activity_ratings

rating_id	activity_id	rating
1		1		4.7
2		1		4.8
3		1		4.9
4		2		4.6
5		2		4.7
6		2		4.8
7		2		4.9
8		3		4.8
9		3		4.7
10		3		4.9
11		3		4.8
12		3		4.9

Question level of difficulty:Hard

Answer:

select activity_name, 
    avg(rating) as average_rating
from activities
left join activity_ratings on activities.activity_id = activity_ratings.activity_id
group by activity_name
order by average_rating desc
limit 2;



-----------------------------------------------------------------------------------------

#Day 21

Santa needs to optimize his sleigh for Christmas deliveries. Write a query to calculate the total weight of gifts for each recipient type (good or naughty) and determine what percentage of the total weight is allocated to each type. Include the recipient_type, total_weight, and weight_percentage in the result.

Table name: gifts

gift_id	gift_name	recipient_type	weight_kg
1	Toy Train	good		2.5
2	Lumps of Coal	naughty		1.5
3	Teddy Bear	good		1.2
4	Chocolate Bar	good		0.3
5	Board Game	naughty		1.8

Question level of difficulty:Hard

Answer: 

with total_weight_cte as(
    select 
        sum(weight_kg) as total_weight
    from gifts
)
select recipient_type, 
   sum(weight_kg) as total_weight,
   round((sum(weight_kg)*100/(select total_weight from total_weight_cte)),2 ) as weight_percentage 
from gifts
group by recipient_type;

---------------------------------------------------------------------------------------

#Day 24


Santa is tracking how many presents he delivers each night leading up to Christmas. He wants a running total to see how many gifts have been delivered so far on any given night. Using the deliveries table, calculate the cumulative sum of gifts delivered, ordered by the delivery date.

Table name: deliveries

delivery_date	gifts_delivered
2024-12-20	120
2024-12-21	150
2024-12-22	200
2024-12-23	300
2024-12-24	500

Question level of difficulty:Hard

Answer:

SELECT 
    delivery_date,
    gifts_delivered,
    SUM(gifts_delivered) OVER (ORDER BY delivery_date) AS cumulative_gifts
FROM 
    deliveries
ORDER BY 
    delivery_date;


--------------------------------------------------------------------------------------

